extends:
  - https://github.com/reviewpad/.github/blob/main/reviewpad-models/common.yml

labels:
  external-contribution:
    description: External contribution
    color: "#8a2151"
  plugins:
    description: Modifications to the plugins directory
    color: "#294b72"
  critical:
    description: Modifications to critical changes
    color: "#294b75"

groups:
  - name: owners
    description: Group of owners
    kind: developers
    spec: '["ferreiratiago", "marcelosousa"]'

  - name: maintainers
    description: Official maintainers
    spec: '["marcelosousa", "ferreiratiago", "shay2025", "zolamk"]'

rules:
  # This rule is used to block pull request from being merged.
  # It is used on extended reviewpad common.yml configuration.
  - name: should block pull request
    description: The pull request should be blocked
    spec: $isElementOf("do-not-merge", $labels()) || !$isElementOf($author(), $group("maintainers")) || $hasFileName("LICENSE")

  - name: touches plugin functions
    description: Modifies the plugin functions
    spec: $hasFilePattern("plugins/aladino/functions/**")

  - name: touches plugin actions
    description: Modifies the plugin actions
    spec: $hasFilePattern("plugins/aladino/actions/**")

  - name: touches plugin functions and actions
    description: Modifies both plugin actions and functions
    spec: $rule("touches plugin actions") && $rule("touches plugin functions")

  - name: touches plugin functions or actions and not builtins
    description: Modifies plugins but not built-ins
    spec: ($rule("touches plugin actions") || $rule("touches plugin functions")) && !$hasFileName("plugins/aladino/builtins.go")

workflows:
  - name: external contribution
    run:
      - if: '!$isElementOf($author(), $group("maintainers"))'
        then:
          - $addLabel("external-contribution")
          - if: $author() != "renovate[bot]"
            then: $info($sprintf("@%s thanks for your contribution!", [$author()]))

  - name: link to GitHub project
    run:
      - if: $rule("is ready") && !$hasLinkedIssues() && !$isLinkedToProject("Reviewpad")
        then: $addToProject("Reviewpad", "In Review")

  - name: changes to critical code
    run:
      - if: $rule("is ready")
        then:
          - if: $hasAnnotation("critical") || $hasFileName("runner.go")
            then: $addLabel("critical")

  - name: test
    run:
      - if: "true"
        then: $sprintf("Hello, %s!", [$author()])

  - name: awareness
    description: Create awareness when some parts of the code are being modified.
    run:
      - if: $rule("is ready")
        then:
          - if: $rule("touches plugin functions") || $rule("touches plugin actions")
            then:
              - $addLabel("plugins")
              - $info("If you are adding or updating a built-in, please do not forget to update the [docs](https://github.com/reviewpad/docs)")
          - if: $rule("touches plugin functions and actions")
            then: $warn("It looks like you modified both functions and actions. Is that intentional?")
          - if: $rule("touches plugin functions or actions and not builtins")
            then: $info("If you have added a new function or action do not forget to include it in the built-in list!")

pipelines:
  - name: license
    description: Pull request that touches the LICENSE file
    trigger: $hasFileName("LICENSE")
    stages:
      - actions:
          - $error("Sorry, you are not authorized to make these changes")
          - $close()
        until: $isElementOf($author(), $group("owners"))
      - actions:
          - $error("You are changing more than the LICENSE file. Pull request that change the LICENSE file should only modify the LICENSE file.")
          - $close()
        until: $fileCount() == 1
      - actions:
          - $addLabel("modifies-license")
          - $assignReviewer($group("owners"), 1)

  - name: renovate-bot
    description: Pull request from renovate bot
    trigger: $author() == "renovate[bot]"
    stages:
      - actions:
          - $comment("Pull request is not up to date with the base branch. Reviewpad will rebase it for you. Please wait for the rebase to complete.")
          - $rebase()
        until: $isUpdatedWithBaseBranch() && $hasLinearHistory()
      - actions:
          - $commentOnce("Some checks are still running. Closing the pull request.")
          - $close()
        until: '!$hasAnyCheckRunCompleted([], ["failure"])'
      - actions:
          - $info("Reviewpad is waiting for all checks to complete with success.")
        until: $haveAllChecksRunCompleted(["reviewpad"], "success")
      - actions:
          - $assignAssignees($group("owners"), 1)
          - $approve("Pull request is ready to be merged. Reviewpad will merge it for you. Please wait for the merge to complete.")
          - $merge("squash")
