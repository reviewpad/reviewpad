api-version: reviewpad.com/v3.x

labels:
  small:
    color: "#294b69"
  medium:
    color: "#a8c3f7"
  large:
    color: "#8a2138"

workflows:
  - name: add-label-with-size
    always-run: true
    if:
      - rule: $size() <= 30
        extra-actions:
          - '$addLabel("small")'
      - rule: $size() > 30 && $size() <= 100
        extra-actions:
          - '$addLabel("medium")'
      - rule: $size() > 100
        extra-actions:
          - '$addLabel("large")'

  - name: lint-commits
    always-run: true
    if:
      - rule: 'true'
        extra-actions:
          - '$commitLint()'
          - '$titleLint()'

  - name: label-requires-approval
    always-run: true
    if:
      - $approvalsCount() == 0
    then:
      - $addLabel("requires-approval")

  - name: assign-assignees
    always-run: true
    if:
      - $length($assignees()) == 0
    then:
      - $assignAssignees([$author()])

  - name: check-base
    always-run: true
    if:
      - $base() != "development"
    then:
      - $warn("please open all pull requests again the development branch first")

  - name: check-head
    always-run: true
    if:
      - '!$any(["feat", "fix"], ($prefix: String => $startsWith($head(), $prefix)))'
    then:
      - $error("please user proper branch naming")

  - name: check-description
    always-run: true
    if:
      - $description() == ""
    then:
      - $error("please add description")

  - name: has-code-pattern
    always-run: true
    if:
      - $hasCodePattern("necessary")
    then:
      - $addLabel("necessary")

  - name: has-file-extensions
    always-run: true
    if:
      - $hasFileExtensions([".md", "", ".go"])
    then:
      - $addLabel("markdown")

  - name: has-file-name
    always-run: true
    if:
      - $hasFileName("README.md")
    then:
      - $addLabel("readme")

  - name: has-file-pattern
    always-run: true
    if:
      - $hasFilePattern("*_test.go")
    then:
      - $addLabel("test")

  - name: has-linked-issues
    always-run: true
    if:
      - '!$hasLinkedIssues()'
    then:
      - $warn("please link issue to pull request")

  - name: has-required-approvals
    always-run: true
    if:
      - '!$hasRequiredApprovals(2, $organization())'
    then:
      - $review("COMMENT", "we will do this instead")

  - name: is-binary
    always-run: true
    if:
      - $isBinary("hello-world")
    then:
      - $addLabel("is-binary")

  - name: is-linked-to-project
    always-run: true
    if:
      - '!$isLinkedToProject("integration test project")'
    then:
      - $addToProject("integration test project", "todo")

  - name: is-draft
    always-run: true
    if:
      - $isDraft()
    then:
      - $setProjectField("integration test project", "status", "In Progress")

  - name: review
    always-run: true
    if:
      - $length($requestedReviewers()) == 0
    then:
      - $assignRandomReviewer()
      - $assignReviewer($organization(), 1, "random")
      - $assignTeamReviewer(["integration-test"])

  - name: is-waiting-for-review
    always-run: true
    if:
      - $isWaitingForReview()
    then:
      - $addLabel("waiting-for-review")

  - name: all-integration-test-team-members-are-organization-members
    always-run: true
    if:
      - '$all($team("integration-test"), ($member: String => $isElementOf($member, $organization())))'
    then:
      - $comment("all integration test team members are members of the organization")

  - name: remove-labels
    always-run: true
    if:
      - $isElementOf("bug", $labels())
    then:
      - $removeLabels(["bug", "duplicate"])
      - $removeLabel("documentation")

  - name: pull-request-count-by
    always-run: true
    if:
      - $pullRequestCountBy($author(), "all") > 0
    then:
      - '$commentOnce($sprintf("Thank you so much for pull request %d", [$totalCreatedPullRequests($author())]))'

  - name: has-git-conflicts
    always-run: true
    if:
      - $hasGitConflicts()
    then:
      - $addLabel("has-conflicts")

  - name: has-linear-history-trigger-workflow
    always-run: true
    if:
      - $hasLinearHistory()
    then:
      - $triggerWorkflow("log.yaml")

  - name: reviewer-status
    always-run: true
    if:
      - '!$any($reviewers(), ($r: String => $reviewerStatus($r) == "APPROVED"))'
    then:
      - '$warn("pull request hasnt been approved by anybody")'

  - name: has-binary-file
    always-run: true
    if:
      - $hasBinaryFile()
    then:
      - $close()
      - $error("Please don't add any binary file into the repository")

  - name: pull-request-info
    always-run: true
    if:
      - 'true'
    then:
      - $info($sprintf("%d comments", [$commentCount()]))
      - $info($sprintf("%d commits", [$commitCount()]))
      - $info($sprintf("%d changed files", [$fileCount()]))
      - $info($sprintf("created at -> %d", [$createdAt()]))
      - $info($sprintf("last event at -> %d", [$lastEventAt()]))
      - $info($sprintf("milestone -> %s", [$milestone()]))
      - $info($sprintf("state -> %s", [$state()]))
      - $info($sprintf("title -> %s", [$title()]))
      - $info($sprintf("log event check run conclusion -> %s", [$checkRunConclusion("log event")]))
      - $comment($sprintf("```%s```", [$selectFromJSON($toJSON($context()), "$.user")]))
      - $comment($sprintf("```%s```", [$selectFromContext("$.milestone")]))